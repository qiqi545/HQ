/*
	This code was generated by a tool. (c) 2019 HQ.IO Corporation. All rights reserved.
    Generated For: Demo
    Generated On: Sunday, May 26, 2019 5:54:55 PM
*/

using System;
using System.Net;
using System.Collections.Generic;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Configuration;
using HQ.Common;
using HQ.Data.Contracts;
using HQ.Data.SessionManagement;
using HQ.Data.Sql.Batching;
using HQ.Data.Sql.Dialects;
using HQ.Platform.Api.Conventions;
using HQ.Platform.Api.Models;
using HQ.Platform.Security.Configuration;


namespace HQ.Template
{
    public static partial class ServiceCollectionExtensions
    {
        public static IServiceCollection AddGenerated<TBatchOptions>(this IServiceCollection services, IConfiguration securityConfig, string rootPath = "/api")
        {
            return services.AddGenerated<TBatchOptions>(securityConfig.Bind, rootPath);
        }

        public static IServiceCollection AddGenerated<TBatchOptions>(this IServiceCollection services, Action<SecurityOptions> configureAction = null, string rootPath = "/api")
        {
            KnownTypesContext.KnownTypes = new[]
            {
                typeof(Person), typeof(Page<Person>), typeof(Stream<Person>),
            };

            services.AddScoped<HQ.Template.IPersonRepository>(r =>
                new HQ.Template.PersonRepository<TBatchOptions>(r.GetRequiredService<IDataConnection>(),
                    r.GetRequiredService<ISqlDialect>(), r.GetRequiredService<IDataBatchOperation<TBatchOptions>>(),
                    r.GetRequiredService<IServerTimestampService>()));

            services.AddScoped<HQ.Template.IPersonService, HQ.Template.PersonService>();


            services.AddSingleton<IDynamicComponent>(r => new GeneratedComponent { Namespace = () => rootPath });

            return services;
        }
    }
}
